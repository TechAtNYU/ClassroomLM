import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import {
  SidebarInset,
  SidebarProvider,
  SidebarTrigger,
} from "@shared/components/ui/sidebar";
import { ThemeProvider } from "@shared/components/ui/theme-provider";
import { AppSidebar } from "@shared/components/ui/sidebar/app-sidebar";
import UserContextProvider from "@shared/lib/userContext/userContext";
import { getUserAndClassroomData } from "@shared/lib/userContext/contextFetcher";
import { cn } from "@shared/lib/utils";
import { Separator } from "@shared/components/ui/separator";
import { Toaster } from "@/shared/components/ui/sonner";
import { BackButton } from "@/shared/components/ui/sidebar/back-button";
import { StarsBackground } from "@/shared/components/background/StarBackground";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "ClassroomLM",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const userData = await getUserAndClassroomData();
  // TODO: change this?

  return (
    <html lang="en">
      <body
        className={cn(
          `font-sans antialiased`,
          geistSans.variable,
          geistMono.variable
        )}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange //TODO: do we want this
        >
          {userData ? (
            <SidebarProvider>
              <UserContextProvider userAndClassDataInitial={userData}>
                <AppSidebar />
                <Toaster
                  // richColors
                  duration={40000}
                  // expand
                  // richColors
                  closeButton
                  toastOptions={{
                    classNames: {
                      closeButton: "!absolute !left-[99%] !top-[2px]", //!bg-background !border-black !text-foreground",
                    },
                  }}
                />
                <SidebarInset
                  // className="md:peer-data-[variant=inset]:mr-7 md:peer-data-[variant=inset]:mt-10 md:peer-data-[variant=inset]:shadow-lg md:peer-data-[variant=inset]:border-accent  md:peer-data-[variant=inset]:border"
                  // bg-[linear-gradient(0deg,_#FFEFD2,_#67c5ff_38%,background)]
                  className="z-10 bg-[linear-gradient(0deg,_rgba(234,225,245,0.6),_rgba(228,228,245,0.6)_50%,_#faf9fd)] dark:bg-[linear-gradient(0deg,_#443461,_#130F5A_38%,_#1F1F1F)] md:peer-data-[variant=inset]:mr-7 md:peer-data-[variant=inset]:mt-10 md:peer-data-[variant=inset]:shadow-md"
                >
                  <header className="z-10 flex h-16 shrink-0 items-center gap-2">
                    <div className="flex items-center gap-1 px-4">
                      <SidebarTrigger className="-ml-1" />
                      <Separator orientation="vertical" className="mr-2 h-4" />
                      <BackButton />
                    </div>
                  </header>
                  <div className="flex flex-1 flex-col gap-4 p-4 pt-0">
                    <StarsBackground
                      minTwinkleSpeed={0.8}
                      twinkleProbability={0.9}
                      className="z-[-1]"
                    />
                    {children}
                  </div>
                </SidebarInset>
              </UserContextProvider>
            </SidebarProvider>
          ) : (
            <main>{children}</main>
          )}
        </ThemeProvider>
      </body>
    </html>
  );
}
